名称：UART_PWM (SOC)

版本号v1.0 
日期 2019/8/15
说明：
功能:通过串口结合自定协议控制FPGA产生PWM,modbus协议中信息包括――【启动、停止、脉冲数、频率】

    本设计由ARM串口信息接收通过AHB总线向FPGA传递命令
	（地址为32'h2000A020――PWM1频率）（地址为32'h2000E020――PWM1脉冲数）
	（地址为32'h2000E080――PWM启动停止命令）等
    FPGA接收命令按预定程序产生3路PWM:
				 PWM1频率 串口信息  PWM1脉冲数串口信息
 				 PWM2频率  ------   PWM2脉冲数------
				 PWM3频率  ------   PWM3脉冲数------

版本号v2.0 
日期 2019/8/19
说明：
改动说明：
    由于选用开发板ARM部分缺失串口中断清零标志，不能及时采集串口接收的数据帧，因此采用FPGA部分接受串口数据帧
    其余部分改动待定


日期 2019/8/21
改动说明：
    方案重新修订：
	FPGA串口接收指令后将重要数据写入AHB总线的不同地址传递至ARM中，ARM通过简单算法输出指令给予FPGA，FPGA按照指令输出相应PWM
    串口接收数据帧格式：
	CD EB D7 数据量 N轴 启动频率 运行频率 脉冲数量 加速冲脉个数 启动命令 停止命令 XX [XX必须要有方便拉低串口接收标志] 
    本设计采用数据帧：
	CD EB D7 07 	03 	00 	0F 	50 	  05 	   	01	 20   01   		
    本设计功能：
	串口接收到一定格式的数据帧进行解析后放入寄存器中等待ARM通过AHB总线读取，将数据传入加减速算法中，在该算法中设定各加速阶段发送脉冲为10个；加速阶段每段频率递增直至达到运行频率；在此函数中，除非当前串口发送指令执行完毕，否则拒绝一切干扰。当前仅测试PWM0这一路波形，显示正常。


版本号v2.1 
日期 2019/8/23
说明：
改动说明：
    添加急停与上传数据功能；
    Python编写相应上位机与之匹配通信(uart文件夹内是上位机源码)



版本号v3.0
日期 2019/8/27
说明：
改动说明：
    将代码模块化、优化
整体说明：
    本设计采用模块化设计，可分为三个主要模块――UART、AHB、OnePWM；
    UART模块负责接收上位机指令，解析成功后将指令传递至AHB模块；同时OnePWM模块的PWM状态、剩余脉冲数传递过来后也由此模块负责发送；
    AHB模块负责将ARM与FPGA的数据通信。通信数据如下:解析后指令参数、PWM状态、ARM变速算法后得到的参数(N/FS/FO/NPulse/MA/Go/Stop)；
    OnePWM模块负责依据AHB传递的参数产生多路50%占空比PWM波形。



版本号v3.1
日期 2019/8/28
说明：
改动说明：
    采用多线程的方式去控制上位机； 
    修改变速算法部分；可参考论文决定实现方式；
    添加减速部分同时将8bit脉冲数量扩充至16bit及上位机部分细节的完善；
    对于变速最后一段整除不尽时出现频率突增的现象采用先扩大再减小方式处理[设置脉冲最小刻度为10hz,精度0.1-0.5hz]
	


版本号v4.0
日期 2019/9/2
说明：
改动说明：
    使用MCU正确结合FPGA的电机控制方式；
    将启动频率扩展至16bit、运行频率至32bit、脉冲数量至32bit 加速时间至16bit
    本设计现在采用数据帧：
	CD EB D7 0E 	03    00 00    00 00 00 0F    00 00 00 50   00 05  01   20  



版本号v4.1
日期 2019/9/4
说明：
改动说明： 
    将加减速时间间隔设定为0.1Ms；
    将加减速频率最大误差缩小,保证精确度；
    修改Python上位机代码使之匹配下位机



版本号v5.0
日期 2019/9/9
说明：
改动说明：
    在代码中使能4路PWM；
    将启动频率扩展至16bit、运行频率至32bit、脉冲数量至24bit 加速时间至8bit；
    本设计现在采用数据帧：
	CD EB D7 2E 0F |03 E8 00 00 07 D0 00 03 56 FF| 03 E8 00 00 27 10 00 03 56 FF| 03 E8 00 00 27 10 00 03 56 FF| 27 10 00 01 86 A0 00 F3 56 FF| 01
    串口接收数据至42byte后续数据会出错(但是不影响本版本Demo)，原因未知有待探讨



版本号v6.0
日期 2019/9/11
说明：
改动说明：
    底层由于所用开发板FPGA资源有限16路通道全开占用LUT90%，故将串口在ARM端采用轮询方式接收数据；
    将控制轴扩展至16bit 启动频率扩展至16bit、运行频率至24bit、脉冲数量至32bit、加速时间至16bit；
    本设计现在采用多数据帧：
	CD 0X |03 E8| |00 00 07 D0| |00 00 03 56| |00 FF|-------0X是控制通道序号
	EB NH NL Go 					 ------NH/NL是16bit控制通道二进制数的高八位与低八位
    此版本中若PWM通道同时开放至八路以上串口会失效，原因可能是程序所耗空间超过分散文件的空间



版本号v6.1
日期 2019/9/15
说明：
改动说明：
    探究PWM通道开放至8路以上串口失效的问题发现确实是程序所耗空间太大； 
    初次优化后最多同时开放13路通道；
    将上位机与下位机相匹配	
    


版本号v6.2
日期 2019/9/16
说明：
改动说明：
   修改设置尝试更改分散文件以便于开启16通道未果；
   再次改进上位机软件添加提示与报警功能；
   补齐16路方向信号输出及左右限位信号输出；
   下位机反馈信息时间间隔设置为100ms。



版本号v6.3
日期 2019/9/27
说明：
改动说明：
   开启十通道PWM



版本号v6.4
日期 2019/10/15
说明：
改动说明：
   更换主控芯片为EF2L45LG144B；
   通过设置keil软件的优化级别将16路通道全部开启



版本号v6.5
日期 2019/11/14
说明：
改动说明：
   最后将程序代码在自制SOC开发板V1.0中匹配相应引脚并运行



版本号v6.6
日期 2019/12/11
说明：
改动说明：
   最后将程序代码在自制SOC开发板V1.1/V1.2中匹配相应引脚并运行；
   将上位机16路PWM通道全部开放同时修改SOC与Python通信中存在的BUG；
   将脉冲的方向设定重新规划：上位机传输十进制数据，正数代表正方向，负数代表反方向；然后在ARM中对脉冲数量数据进行处理使之与FPGA代码相匹配



版本号v7.0
日期 2019/12/18
说明：
改动说明：
   将Python文件打包成可跨平台使用的EXE文件；
   将多轴运算控制器的适用范围扩大化
